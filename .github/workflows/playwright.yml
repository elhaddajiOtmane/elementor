name: Playwright

on:
  pull_request:
  workflow_dispatch:
      inputs:
        reporter:
          required: false
          description: 'Select a reporter'
          type: choice
          options:
            - allure-playwright
            - html
            - blob
            - list
          default: allure-playwright
        path-to-results:
          required: false
          description: 'Provide path to reporter files'
          default: allure-results
          type: choice
          options:
            - test-results/
            - tests/playwright/blob-report
            - allure-results


# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build-plugin:
    name: Build plugin
    runs-on: ubuntu-latest
    if: startsWith( github.repository, 'elementor/' )
    outputs:
      changelog_diff: ${{ steps.changelog_diff_files.outputs.diff }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Check if this is only a changelog PR
        id: changelog_diff_files
        uses: technote-space/get-diff-action@v6
        with:
          # PATTERNS are:
          # Everything: **/*
          # Everything in directories starting with a period: .*/**/*
          # Not readme.txt: !readme.txt
          # Not changelog.txt: !changelog.txt
          PATTERNS: |
            **/*
            .*/**/*
            !readme.txt
            !changelog.txt
      - name: Install Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Restore NPM Cache
        uses: actions/cache/restore@v3
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: github.event.pull_request.title == null || steps.changelog_diff_files.outputs.diff
        run: npm ci
      - name: Build
        if: github.event.pull_request.title == null || steps.changelog_diff_files.outputs.diff
        run: npx grunt build
      - name: Cache node modules
        if: github.event.pull_request.title == null || steps.changelog_diff_files.outputs.diff
        uses: actions/cache/save@v3
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Save build to cache
        if: github.event.pull_request.title == null || steps.changelog_diff_files.outputs.diff
        uses: actions/cache/save@v3
        with:
          path: ./build/*
          key: playwright-build-${{ github.sha }}

  Playwright:
    name: Playwright test - ${{ matrix.testSuite }} on PHP 7.4
    runs-on: ubuntu-latest
    needs: [build-plugin]
    if: ${{ github.event.pull_request.title == null || needs.build-plugin.outputs.changelog_diff }}
    strategy:
      matrix:
        testSuite: [
          'ai',
          'onBoarding',
          'video',
          'elements-regression',
          'default',
          'nested-tabs',
          'reverse-columns',
          'container',
          'nested-accordion',
          'styleguide_image_link',
          'rating',
          'pluginTester1_containers',
          'pluginTester2_containers',
          'pluginTester1_sections',
          'pluginTester2_sections'
        ]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Install Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Restore NPM from cache
        uses: actions/cache/restore@v3
        id: restore-npm
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Restore build from cache
        uses: actions/cache/restore@v3
        id: restore-build
        with:
          path: ./build/*
          key: playwright-build-${{ github.sha }}
      - name: Update wp-env.json file
        env:
          PHP_VERSION: '8.0'
          WP_CORE_VERSION: 'latest'
        run: node ./.github/scripts/build-wp-env.js
      - name: Install dependencies
        run: npm ci
      - name: Install WordPress environment
        run: |
          npm run start-local-server
          npm run test:setup:playwright
      - name: WordPress debug information
        run: |
          npx wp-env run cli wp core version
          npx wp-env run cli wp --info
      - name: Activate performance experiments
        run: |
          npx wp-env run cli wp elementor experiments activate e_font_icon_svg,e_lazyload,e_optimized_assets_loading,e_optimized_css_loading,additional_custom_breakpoints,e_image_loading_optimization
      - name: Install playwright/test
        run: |
          npx playwright install chromium
      - name: Run Playwright tests
        if: ${{matrix.testSuite !='elements-regression'}}
        env:
          TEST_SUITE: "@${{matrix.testSuite}}"
        run: npm run test:playwright -- --reporter=${{inputs.reporter || 'list'}}
      - name: Run element regression tests
        if: ${{matrix.testSuite =='elements-regression'}}
        run: npm run test:playwright:elements-regression -- --reporter=${{inputs.reporter || 'list'}}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-test-results
          path: ${{inputs.path-to-results || 'test-results/'}} 
          retention-days: 2     
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: allure-results
          path: allure-results
          retention-days: 2   

  test-result:
    needs: Playwright
    if: ${{ always() }} # Will be run even if 'Playwright' matrix will be skipped
    runs-on: ubuntu-22.04
    name: Playwright - Test Results
    steps:
      - name: Test status
        run: echo "Test status is - ${{ needs.Playwright.result }}"
      - name: Check Playwright matrix status
        if: ${{ needs.Playwright.result != 'success' && needs.Playwright.result != 'skipped' }}
        run: exit 1

  # Build-and-Publish-report:
  #   needs: Playwright
  #   runs-on: ubuntu-22.04
  #   name: Build Allure report and publish to GH pages
  #   if: always()
  #   steps:
  #     - name: Pull repo
  #       uses: actions/checkout@v3
  #     - name: Download allure data
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: allure-results
  #         path: allure-results
  #     - name: Load test report history
  #       uses: actions/checkout@v3
  #       continue-on-error: true
  #       with:
  #           ref: gh-pages
  #           path: gh-pages
  #     - name: Build test report
  #       uses: simple-elf/allure-report-action@v1.8
  #       with:
  #           gh_pages: gh-pages
  #           allure_history: allure-history
  #           allure_results: allure-results
  #           keep_reports: 5
  #     - name: Publish test report
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #           github_token: ${{secrets.MAINTAIN_TOKEN}}
  #           publish_branch: gh-pages
  #           publish_dir: allure-history
  #     - name: Get icon
  #       run : |
  #         if [[ ${{needs.Playwright.result == 'success'}} ]]; then
  #           ICON="✅" 
  #         else
  #           ICON="❌"
  #         fi
  #         echo "ICON=${ICON}" >> $GITHUB_ENV
  #     - name: Comment PR with Allure Report link
  #       if: ${{github.event_name == 'pull_request'}}
  #       continue-on-error: true
  #       uses: thollander/actions-comment-pull-request@v2
  #       with:
  #           message: |
  #             ${{ env.ICON }} [Playwright test report](https://${{github.repository_owner}}.github.io/elementor/${{github.run_number }})
  #           comment_tag: allure_report
  #           mode: recreate
  #     - name: Add report link to GH annotation
  #       run: echo "::notice links::https://${{github.repository_owner}}.github.io/elementor/${{github.run_number }}"
